(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-30001bf1"],{"70e4":function(e,t,r){e.exports=r.p+"img/example_structure.9e4fb70f.jpg"},f820:function(e,t,r){"use strict";r.r(t);var i=function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("b-container",{attrs:{fluid:""}},[i("b-row",[i("b-col"),i("b-col",{attrs:{sm:"6"}},[i("div",{staticClass:"py-4"},[i("h3",[e._v("Help")]),i("h5",{staticClass:"mt-4"},[e._v("Getting started")]),i("p",[e._v('To start using Voyager, import some data using the "Import" button in the top-right corner of the Solution Explorer page.')]),i("h5",{staticClass:"mt-4"},[e._v("Data structure")]),i("p",[e._v("To use Voyager, any multi-dimensional data must be structured in the following format:\n\n          "),i("ul",[i("li",[i("b",[e._v("Configuration")]),e._v(" - a possible solution in the design space, which has a collection of attributes to represent its properties."),i("br"),e._v("\n            Configurations can optionally have an architectural structure, which is represented as a directed graph.")]),i("li",[i("b",[e._v("Attribute")]),e._v(" - a property of each configuration, e.g. response time. It is often the case that a higher or lower value is more desirable.")])])]),i("h5",{staticClass:"mt-4"},[e._v("Data formats")]),i("p",[e._v("Data can be imported into Voyager using "),i("code",[e._v(".csv")]),e._v(" or "),i("code",[e._v(".json")]),e._v(" files.\n        You can import any previously exported "),i("code",[e._v(".json")]),e._v(" files, or any data in the following formats:")]),i("b-card",{attrs:{"no-body":""}},[i("b-tabs",{attrs:{card:"","no-fade":""}},[i("b-tab",{attrs:{title:"CSV"}},[i("p",[e._v("\n                CSV files can be imported into Voyager. These should be formatted such that:"),i("br"),i("ul",[i("li",[e._v("The first row contains column headers, these map to attribute names")]),i("li",[e._v("Each row represents a single configuration")]),i("li",[e._v("Each value in a row represents an attribute")]),i("li",[e._v('An "id" column is used as an identifier for each configuration, and will appear in the configuration list')]),i("li",[e._v('If no "id" is specified, each configuration will be allocated a numerical idenfifier')])])]),i("b-row",[i("b-col",[i("h6",[e._v("Example (.csv)")]),i("code",[e._v("\n                    Id,Cost,Response Time,Reliability"),i("br"),e._v("\n                    config-1,10,40,0.98"),i("br"),e._v("\n                    config-2,30,14,0.99\n                  ")])]),i("b-col",[i("h6",[e._v("Value")]),i("ul",[i("li",[i("b",[e._v("config-1")]),i("br"),e._v("cost = 10"),i("br"),e._v("response time = 40"),i("br"),e._v("reliability = 0.98"),i("br")]),i("li",[i("b",[e._v("config-2")]),i("br"),e._v("cost = 30"),i("br"),e._v("response time = 14"),i("br"),e._v("reliability = 0.99")])])])],1)],1),i("b-tab",{attrs:{title:"JSON (configurations)"}},[i("p",[e._v("\n                To import a list of configurations with its associated attributes, the JSON file should be structured as an array of objects, one per configuration. Each object must contain:"),i("br"),i("ul",[i("li",[e._v("A single property, with a key being the configuration identifier (string)")]),i("li",[e._v("An array of attribute values, each represented as a key-value object")])])]),i("b-row",[i("b-col",[i("h6",[e._v("Example (.json)")]),i("code",[e._v("\n                  [{"),i("br"),e._v('\n                    "config-1": ['),i("br"),e._v('\n                      { "cost": "10" },'),i("br"),e._v('\n                      { "responseTime": "40" },'),i("br"),e._v('\n                      { "reliability": "0.98" }'),i("br"),e._v("\n                    ]"),i("br"),e._v("\n                  }, {"),i("br"),e._v('\n                    "config-2": ['),i("br"),e._v('\n                      { "cost": "30" },'),i("br"),e._v('\n                      { "responseTime": "14" },'),i("br"),e._v('\n                      { "reliability": "0.99" }'),i("br"),e._v("\n                    ]"),i("br"),e._v("\n                  }]\n                  ")])]),i("b-col",[i("h6",[e._v("Value")]),i("ul",[i("li",[i("b",[e._v("config-1")]),i("br"),e._v("cost = 10"),i("br"),e._v("response time = 40"),i("br"),e._v("reliability = 0.98"),i("br")]),i("li",[i("b",[e._v("config-2")]),i("br"),e._v("cost = 30"),i("br"),e._v("response time = 14"),i("br"),e._v("reliability = 0.99")])])])],1)],1),i("b-tab",{attrs:{title:"JSON (structure)"}},[i("p",[e._v("\n                Architectural structure can be imported into Voyager using JSON files, one configuration at a time.\n                The JSON file should consist of a single object, with the following properties"),i("br"),i("ul",[i("li",[i("b",[e._v("id")]),e._v(": The configuration identifier (string)")]),i("li",[i("b",[e._v("graph")]),e._v(": An array of the architectural structure, where each element is an object with a key (representing the node name), and an array of connections as it's value.")])])]),i("b-row",[i("b-col",[i("h6",[e._v("Example (.json)")]),i("code",[e._v("\n                  {"),i("br"),e._v('\n                    "id": "config-1",'),i("br"),e._v('\n                    "graph": ['),i("br"),e._v('\n                      {"NodeA": [{ "AtoB": "NodeB"}]},'),i("br"),e._v('\n                      {"NodeB": [{ "BtoC": "NodeC"}]},'),i("br"),e._v('\n                      {"NodeC": ['),i("br"),e._v('\n                        { "CtoA": "NodeA"},'),i("br"),e._v('\n                        { "CtoB": "NodeB"}'),i("br"),e._v("\n                      ]},"),i("br"),e._v("\n                    ]"),i("br"),e._v("\n                  }\n                  ")])]),i("b-col",[i("h6",[e._v("Value")]),i("img",{attrs:{src:r("70e4"),height:"250"}})])],1)],1)],1)],1),i("h5",{staticClass:"mt-4"},[e._v("Exporting data")]),i("p",[e._v('To save the current state of Voyager, press the "Export" button in the top-right corner of the Solution Explorer page.')]),i("h5",{staticClass:"mt-4"},[e._v("Clearing data")]),i("p",[e._v('To reset and remove all data from Voyager, press the "Reset" button in the top-right corner of the Solution Explorer page.')])],1)]),i("b-col")],1)],1)},o=[],n=r("2b0e"),a=n["default"].extend({}),s=a,l=r("2877"),c=Object(l["a"])(s,i,o,!1,null,null,null);t["default"]=c.exports}}]);
//# sourceMappingURL=chunk-30001bf1.d92abf24.js.map